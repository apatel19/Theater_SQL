DROP TABLE IF EXISTS USER;
DROP TABLE IF EXISTS THEATER;
DROP TABLE IF EXISTS SYSTEM_INFO;
DROP TABLE IF EXISTS REVIEW;
DROP TABLE IF EXISTS SHOWTIME;
DROP TABLE IF EXISTS PLAYS_AT;
DROP TABLE IF EXISTS PAYMENT_INFO;
DROP TABLE IF EXISTS ORDER_INFO;
DROP TABLE IF EXISTS MOVIE;
DROP TABLE IF EXISTS CUSTOMER;
DROP TABLE IF EXISTS POPULAR_MOVIES;
DROP TABLE IF EXISTS REVENUE_REPORT;
DROP TABLE IF EXISTS PREFERS;

CREATE TABLE USER
(
	Email VARCHAR(40) NOT NULL,
	Username CHAR(15) NOT NULL,
	Password VARCHAR(7) NOT NULL,
	User_Type VARCHAR(12) NOT NULL,
	CONSTRAINT USERPK PRIMARY KEY (Email, Username)
);


CREATE TABLE CUSTOMER
(
	Customer_Email VARCHAR(40),
	Order_Id VARCHAR(10),
	CONSTRAINT CSTMRPK PRIMARY KEY(Customer_Email, Order_Id),
	CONSTRAINT CSTMR_EKF FOREIGN KEY(Customer_Email) REFERENCES USER (Email) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT CSTMR_EKF FOREIGN KEY(Order_Id)  REFERENCES ORDER_INFO(Order_Id)
);



CREATE TABLE MOVIE
(
	Title VARCHAR(40) NOT NULL,
	Release_Date DATE,
	Rating VARCHAR(5),
	Genre VARCHAR(75),
	Movie_Length VARCHAR(5),
	Movie_Cast VARCHAR(100),
	Synopsis VARCHAR(1500),
	CONSTRAINT MOVIEPK PRIMARY KEY(Title)
);

CREATE TABLE REVIEW
(
	Review_ID VARCHAR(20) NOT NULL,
	Title VARCHAR(40) NOT NULL,
	Review_Comment VARCHAR(1000) NOT NULL,
	Customer_Email VARCHAR(40),
	Rating Integer NOT NULL, 
	CONSTRAINT REVIEWPK PRIMARY KEY(Review_ID),
	CONSTRAINT REVIEWFK FOREIGN KEY(Title) REFERENCES MOVIE(Title) ON DELETE CASCADE ON UPDATE CASCADE	
);


CREATE TABLE ORDER_INFO
(
	Order_Id VARCHAR(20),
	Order_Date Date,
	Time VARCHAR(10),
	Status VARCHAR(10),
	Senior_Tickits Integer,
	Child_Tickits Integer,
	Adult_Tickits Integer,
	Total_Tickits Integer,
	CardNo VARCHAR(12),
	Theater_Id VARCHAR(20),
	Customer_Username VARCHAR(40),
	Movie_Title VARCHAR(50),
	CONSTRAINT ORDERPK PRIMARY KEY(Order_Id),
	CONSTRAINT ORDER_CARDNOFK FOREIGN KEY(CardNo) REFERENCES PAYMENT_INFO(Cardnumber) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT ORDER_EFK FOREIGN KEY(Theater_Id) REFERENCES THEATER (Theater_Id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT ORDER_FK FOREIGN KEY(Customer_Username) REFERENCES CUSTOMER (Username) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT ORDER_TITLE_FK FOREIGN KEY(Movie_Title) REFERENCES MOVIE (Title) ON DELETE SET NULL ON UPDATE CASCADE
);



CREATE TABLE THEATER
(
	Theater_Id VARCHAR(20) NOT NULL,
	Street VARCHAR(30),
	City VARCHAR(20),
	State VARCHAR(20),
	Zipcode VARCHAR(10),
	Name VARCHAR(20),
	CONSTRAINT THEATERPK PRIMARY KEY(Theater_Id)
);


CREATE TABLE SYSTEM_INFO
(
	Cancellation_Fee Integer,
	Senior_Discount Integer,
	Child_Discount Integer,
	Manager_Password VARCHAR(20)
);

INSERT INTO SYSTEM_INFO VALUES (10, 5, 5, 'I_AM_MANAGER');

create table PAYMENT_INFO
(
	Username varchar(40),
	Cardnumber varchar(12),
	Cvv varchar(3),
	Name_on_card varchar(50),
	Card_expirationdate varchar(9),
	Saved Varchar(10),
	CONSTRAINT PAYMENT_PK PRIMARY KEY(Cardnumber),
  	CONSTRAINT PAYMENT_FK FOREIGN KEY(Username) REFERENCES CUSTOMER (Username) ON DELETE CASCADE ON UPDATE CASCADE
);


Create table  PLAYS_AT
(
	theater_id varchar(20),	
	movie_title varchar(100),
	playing varchar(2000),
	CONSTRAINT PLAYS_THEATERPK PRIMARY KEY(theater_id, movie_title),
	CONSTRAINT PLAYS_THEATERFK FOREIGN KEY(theater_id) REFERENCES THEATER(Theater_Id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT PLAYS_MOVIEPK FOREIGN KEY(movie_title) REFERENCES MOVIE(Title) ON DELETE CASCADE ON UPDATE CASCADE
);

Create table SHOWTIME
(
	theater_id varchar(20),	
	movie_title varchar(100),
	show_time varchar(2000),
	CONSTRAINT SHOWTIME_THEATERPK PRIMARY KEY(theater_id, movie_title, show_time),
	CONSTRAINT SHOWTIME_THEATERFK FOREIGN KEY(theater_id) REFERENCES THEATER(Theater_Id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT SHOWTIME_MOVIEPK FOREIGN KEY(movie_title) REFERENCES MOVIE(Title) ON DELETE CASCADE ON UPDATE CASCADE
);

Create table PREFERS
(
	Theater_ID varchar(20),
	Username VARCHAR(50),
	CONSTRAINT PREFERS_PK PRIMARY KEY(Theater_ID, Username),
	CONSTRAINT PREFERS_FK FOREIGN KEY(Theater_ID) REFERENCES THEATER(Theater_Id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT PREFERS_FK FOREIGN KEY(Username) REFERENCES CUSTOMER (Username) ON DELETE CASCADE ON UPDATE CASCADE
 
);

Create TABLE POPULAR_MOVIES
(
	Movie_month varchar(10),
	Movie_title varchar(100),
	Total_bought_tickits integer,
	constraint popular_movies_pk primary key(Movie_month)
);

CREATE TABLE REVENUE_REPORT
(	
	Movie_month varchar(10),
	Revenue_Amount Integer,
	constraint REVENUE_PK PRIMARY KEY(Movie_month)
);

